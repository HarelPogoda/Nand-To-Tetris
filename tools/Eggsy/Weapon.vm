function Weapon.new 0
push constant 8
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 1
push constant 0
pop this 0
push argument 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 20
pop this 6
push constant 30
pop this 7
push constant 256
pop this 3
push constant 200
pop this 4
label IF_FALSE0
push argument 0
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 30
pop this 2
push constant 256
pop this 3
push constant 200
pop this 4
label IF_FALSE1
push argument 0
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 30
pop this 5
push constant 256
pop this 3
push constant 200
pop this 4
label IF_FALSE2
push pointer 0
call Weapon.draw 1
pop temp 0
push pointer 0
return
function Weapon.initialize 0
push argument 0
pop pointer 0
push constant 0
pop this 0
push this 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Weapon.initialize_rhombus 1
pop temp 0
label IF_FALSE0
push this 1
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Weapon.initialize_square 1
pop temp 0
label IF_FALSE1
push this 1
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call Weapon.initialize_arrow 1
pop temp 0
label IF_FALSE2
push constant 0
return
function Weapon.initialize_arrow 0
push argument 0
pop pointer 0
push pointer 0
call Weapon.erase_arrow 1
pop temp 0
push constant 256
pop this 3
push constant 200
pop this 4
push constant 30
pop this 5
push pointer 0
push constant 0
not
call Weapon.drawArrow 2
pop temp 0
push constant 0
return
function Weapon.initialize_square 0
push argument 0
pop pointer 0
push pointer 0
call Weapon.erase_square 1
pop temp 0
push constant 256
pop this 3
push constant 200
pop this 4
push constant 30
pop this 2
push pointer 0
push constant 0
not
call Weapon.drawSquare 2
pop temp 0
push constant 0
return
function Weapon.initialize_rhombus 0
push argument 0
pop pointer 0
push pointer 0
call Weapon.erase_rhombus 1
pop temp 0
push constant 256
pop this 3
push constant 200
pop this 4
push constant 20
pop this 6
push constant 30
pop this 7
push pointer 0
push constant 0
not
call Weapon.drawRhombus 2
pop temp 0
push constant 0
return
function Weapon.shoot 0
push argument 0
pop pointer 0
push constant 0
not
pop this 0
push this 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Weapon.shoot_rhombus 1
pop temp 0
label IF_FALSE0
push this 1
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Weapon.shoot_square 1
pop temp 0
label IF_FALSE1
push this 1
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call Weapon.shoot_arrow 1
pop temp 0
label IF_FALSE2
push constant 0
return
function Weapon.shoot_arrow 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
not
pop this 0
label WHILE_EXP0
push local 0
push constant 240
lt
not
if-goto WHILE_END0
push pointer 0
call Weapon.erase_arrow 1
pop temp 0
push this 4
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 4
push constant 1
sub
pop this 4
push constant 1
call Sys.wait 1
pop temp 0
label IF_FALSE0
push pointer 0
push constant 0
not
call Weapon.drawArrow 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Weapon.shoot_square 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
not
pop this 0
label WHILE_EXP0
push local 0
push constant 240
lt
not
if-goto WHILE_END0
push pointer 0
call Weapon.erase_square 1
pop temp 0
push this 4
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
push this 4
push constant 1
sub
call Math.max 2
pop this 4
label IF_FALSE0
push pointer 0
push constant 0
not
call Weapon.drawSquare 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Weapon.shoot_rhombus 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
not
pop this 0
label WHILE_EXP0
push local 0
push constant 240
lt
not
if-goto WHILE_END0
push pointer 0
call Weapon.erase_rhombus 1
pop temp 0
push this 4
push this 7
push constant 2
call Math.divide 2
sub
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 4
push constant 1
sub
pop this 4
label IF_FALSE0
push pointer 0
push constant 0
not
call Weapon.drawRhombus 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Weapon.move_left 0
push argument 0
pop pointer 0
push this 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Weapon.move_left_rhombus 1
pop temp 0
label IF_FALSE0
push this 1
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Weapon.move_left_square 1
pop temp 0
label IF_FALSE1
push this 1
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call Weapon.move_left_arrow 1
pop temp 0
label IF_FALSE2
push constant 0
return
function Weapon.move_left_arrow 0
push argument 0
pop pointer 0
push pointer 0
call Weapon.erase_arrow 1
pop temp 0
push constant 0
push this 3
push constant 30
sub
call Math.max 2
pop this 3
push pointer 0
push constant 0
not
call Weapon.drawArrow 2
pop temp 0
push constant 0
return
function Weapon.move_left_square 0
push argument 0
pop pointer 0
push pointer 0
call Weapon.erase_square 1
pop temp 0
push constant 0
push this 3
push constant 10
sub
call Math.max 2
pop this 3
push pointer 0
push constant 0
not
call Weapon.drawSquare 2
pop temp 0
push constant 0
return
function Weapon.move_left_rhombus 0
push argument 0
pop pointer 0
push pointer 0
call Weapon.erase_rhombus 1
pop temp 0
push this 3
push constant 30
sub
push this 6
sub
push constant 2
call Math.divide 2
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
push constant 30
sub
pop this 3
label IF_FALSE0
push pointer 0
push constant 0
not
call Weapon.drawRhombus 2
pop temp 0
push constant 0
return
function Weapon.move_right 0
push argument 0
pop pointer 0
push this 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Weapon.move_right_rhombus 1
pop temp 0
label IF_FALSE0
push this 1
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Weapon.move_right_square 1
pop temp 0
label IF_FALSE1
push this 1
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call Weapon.move_right_arrow 1
pop temp 0
label IF_FALSE2
push constant 0
return
function Weapon.move_right_arrow 0
push argument 0
pop pointer 0
push pointer 0
call Weapon.erase_arrow 1
pop temp 0
push constant 511
push this 3
push constant 30
add
call Math.min 2
pop this 3
push pointer 0
push constant 0
not
call Weapon.drawArrow 2
pop temp 0
push constant 0
return
function Weapon.move_right_square 0
push argument 0
pop pointer 0
push pointer 0
call Weapon.erase_square 1
pop temp 0
push constant 511
push this 2
sub
push this 3
push constant 10
add
call Math.min 2
pop this 3
push pointer 0
push constant 0
not
call Weapon.drawSquare 2
pop temp 0
push constant 0
return
function Weapon.move_right_rhombus 0
push argument 0
pop pointer 0
push pointer 0
call Weapon.erase_rhombus 1
pop temp 0
push this 3
push constant 30
add
push this 6
add
push constant 2
call Math.divide 2
push constant 512
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
push constant 30
add
pop this 3
label IF_FALSE0
push pointer 0
push constant 0
not
call Weapon.drawRhombus 2
pop temp 0
push constant 0
return
function Weapon.draw 0
push argument 0
pop pointer 0
push this 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push constant 0
not
call Weapon.drawRhombus 2
pop temp 0
label IF_FALSE0
push this 1
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push constant 0
not
call Weapon.drawSquare 2
pop temp 0
label IF_FALSE1
push this 1
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push constant 0
not
call Weapon.drawArrow 2
pop temp 0
label IF_FALSE2
push constant 0
return
function Weapon.drawArrow 0
push argument 0
pop pointer 0
push argument 1
call Screen.setColor 1
pop temp 0
push this 3
push this 4
push this 3
push this 4
push constant 50
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Weapon.drawSquare 0
push argument 0
pop pointer 0
push argument 1
call Screen.setColor 1
pop temp 0
push this 3
push this 4
push this 3
push this 2
add
push this 4
call Screen.drawLine 4
pop temp 0
push this 3
push this 4
push this 2
add
push this 3
push this 2
add
push this 4
push this 2
add
call Screen.drawLine 4
pop temp 0
push this 3
push this 4
push this 3
push this 4
push this 2
add
call Screen.drawLine 4
pop temp 0
push this 3
push this 2
add
push this 4
push this 3
push this 2
add
push this 4
push this 2
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Weapon.drawRhombus 12
push argument 0
pop pointer 0
push this 3
pop local 0
push this 4
push this 7
push constant 2
call Math.divide 2
sub
pop local 1
push this 3
pop local 2
push this 4
push this 7
push constant 2
call Math.divide 2
add
pop local 3
push this 3
push this 6
push constant 2
call Math.divide 2
sub
pop local 4
push this 4
pop local 5
push this 3
push this 6
push constant 2
call Math.divide 2
add
pop local 6
push this 4
pop local 7
push local 4
push constant 1
neg
gt
pop local 8
push local 6
push constant 500
lt
pop local 9
push local 1
push constant 1
neg
gt
pop local 10
push local 3
push constant 256
lt
pop local 11
push local 8
push local 9
and
push local 10
and
push local 11
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
call Screen.setColor 1
pop temp 0
push local 0
push local 1
push local 6
push local 7
call Screen.drawLine 4
pop temp 0
push local 6
push local 7
push local 2
push local 3
call Screen.drawLine 4
pop temp 0
push local 2
push local 3
push local 4
push local 5
call Screen.drawLine 4
pop temp 0
push local 4
push local 5
push local 0
push local 1
call Screen.drawLine 4
pop temp 0
label IF_FALSE0
push constant 0
return
function Weapon.erase 0
push argument 0
pop pointer 0
push this 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Weapon.erase_rhombus 1
pop temp 0
label IF_FALSE0
push this 1
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Weapon.erase_square 1
pop temp 0
label IF_FALSE1
push this 1
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call Weapon.erase_arrow 1
pop temp 0
label IF_FALSE2
push constant 0
return
function Weapon.erase_arrow 0
push argument 0
pop pointer 0
push pointer 0
push constant 0
call Weapon.drawArrow 2
pop temp 0
push constant 0
return
function Weapon.erase_square 0
push argument 0
pop pointer 0
push pointer 0
push constant 0
call Weapon.drawSquare 2
pop temp 0
push constant 0
return
function Weapon.erase_rhombus 0
push argument 0
pop pointer 0
push this 3
push this 6
sub
push constant 2
call Math.divide 2
push constant 0
gt
push this 3
push this 6
sub
push constant 2
call Math.divide 2
push constant 0
eq
or
push this 3
push this 6
add
push constant 2
call Math.divide 2
push constant 511
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push constant 0
call Weapon.drawRhombus 2
pop temp 0
label IF_FALSE0
push constant 0
return
function Weapon.getX 0
push argument 0
pop pointer 0
push this 3
return
function Weapon.getY 0
push argument 0
pop pointer 0
push this 4
return
function Weapon.getSize 0
push argument 0
pop pointer 0
push this 2
return
function Weapon.getHeight 0
push argument 0
pop pointer 0
push this 7
return
function Weapon.getWidth 0
push argument 0
pop pointer 0
push this 6
return
function Weapon.getisShot 0
push argument 0
pop pointer 0
push this 0
return
function Weapon.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
